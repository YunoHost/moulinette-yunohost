#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import os.path
import yaml
from os import listdir
from os.path import isfile, join

from_source = False

# Run from source
basedir = os.path.abspath('%s/../' % os.path.dirname(__file__))
if os.path.isdir('%s/moulinette' % basedir):
    sys.path.insert(0, basedir)
    from_source = True

from moulinette import init, api, MoulinetteError


## Callbacks for additional routes

def is_installed():
    """
    Check whether YunoHost is installed or not

    """
    installed = False
    if os.path.isfile('/etc/yunohost/installed'):
        installed = True
    return { 'installed': installed }


def _get_modules():
    """
    Get a dict of managed services with their parameters

    """
    from os import listdir
    from os.path import isfile, join
    path='/usr/share/moulinette/actionsmap/'
    onlyfiles = [ f[:-4] for f in listdir(path) if isfile(join(path,f))]
    return onlyfiles

## Main action

if __name__ == '__main__':
    # Run from source
    init(_from_source=from_source)

    # Additional arguments
    cache = True
    websocket = True
    if '--no-cache' in sys.argv:
        cache = False
        sys.argv.remove('--no-cache')
    if '--no-websocket' in sys.argv:
        websocket = False
        sys.argv.remove('--no-websocket')
    # TODO: Add log argument

    try:
        # Run the server 
        from os import listdir
        from os.path import isfile, join
        path='/usr/share/moulinette/actionsmap/'
        modules = [ f[:-4] for f in listdir(path) if isfile(join(path,f))]
        api(modules, port=6787,
            routes={('GET', '/installed'): is_installed},
            use_cache=False, use_websocket=websocket)
    except MoulinetteError as e:
        from moulinette.interfaces.cli import colorize
        print('%s %s' % (colorize(m18n.g('error'), 'red'), e.strerror))
        sys.exit(e.errno)
    sys.exit(0)
