#!/usr/bin/env python

import sys
import requests
import json
import subprocess
import re

SERVER_URL = "https://paste.yunohost.org"
TIMEOUT = 3

def create_snippet(data):
    try:
        url = SERVER_URL + "/documents"
        response = requests.post(url, data=data.encode('utf-8'), timeout=TIMEOUT)
        response.raise_for_status()
        dockey = json.loads(response.text)['key']
        return SERVER_URL + "/" + dockey
    except requests.exceptions.RequestException as e:
        print("\033[31mError: {}\033[0m".format(e))
        sys.exit(1)

def execute_command(command):
    try:
        process = subprocess.Popen(
            command,
            shell=True,
            executable="/bin/bash",
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            universal_newlines=True
        )

        output = ""
        while True:
            line = process.stdout.readline()
            if line == "" and process.poll() is not None:
                break
            sys.stdout.write(line)
            sys.stdout.flush()
            output += line

        return output.strip()
    except subprocess.CalledProcessError as e:
        print("\033[31mError executing command: {}\033[0m".format(e))
        sys.exit(1)

def anonymize_output(output):
    # Replace IPv4 addresses
    output = re.sub(r"\b(?:\d{1,3}\.){3}\d{1,3}\b", "[IPv4]", output)
    # Replace IPv6 addresses
    output = re.sub(r"\b(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}\b", "[IPv6]", output)
    # Replace domain names
    output = re.sub(r"\b(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,}\b", "[DOMAIN]", output)
    
    return output

def print_usage():
    print("\033[33mUsage:")
    print("\033[34m  yunopaste 'command' [-na|--no-anonymize]\033[0m")
    print("\033[33mDescription:")
    print("\033[36m  Executes the provided command and captures all of its output.")
    print("  Pastes the output to the YunoHost Haste server and prints the URL of the created snippet.\033[0m")
    print("\033[33mOptions:")
    print("\033[35m  -na, --no-anonymize\t\033[0mDo not anonymize the output")
    print("\033[33mExample:")
    print("\033[35m  yunopaste '\033[32msudo yunohost diagnosis show\033[35m'\033[0m")
    print("\033[35m  yunopaste '\033[32msudo yunohost diagnosis show\033[35m' -na\033[0m")

def main():
    if len(sys.argv) < 2:
        print_usage()
        sys.exit(0)

    command_args = sys.argv[1:]
    anonymize_output_flag = True

    if "-na" in command_args or "--no-anonymize" in command_args:
        command_args = [arg for arg in command_args if arg not in ("-na", "--no-anonymize")]
        anonymize_output_flag = False

    command = " ".join(command_args)
    output = execute_command(command)

    if not output:
        print("\033[31mError: Command didn't produce any output.\033[0m")
        sys.exit(1)

    if anonymize_output_flag:
        anonymized_output = anonymize_output(output)
        url = create_snippet(anonymized_output)
    else:
        url = create_snippet(output)

    print("\033[32mURL: {}\033[0m".format(url))

if __name__ == "__main__":
    main()
